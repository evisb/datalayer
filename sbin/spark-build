#!/usr/bin/env bash

# Licensed to Datalayer (https://datalayer.io) under one or more
# contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. Datalayer licenses this file
# to you under the Apache License, Version 2.0 (the 
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

echo -e $BOLD$YELLOW"Building Apache Spark"$NOCOLOR$NOBOLD
echo

if [ -z "$1" ]
then
  export FLAVOR=2.4
else
  export FLAVOR=$1
fi

echo -e $BOLD"Building Spark for flavor '$FLAVOR'"$NOBOLD
echo

export HADOOP_VERSION=2.9.0

case "$FLAVOR" in

  2.4)
    export DLABRANCH=v2.4.0
    export SPARK_VERSION=2.4.0
    ;;

  2.2)
    export DLABRANCH=datalayer
    export SPARK_VERSION=2.2.0-k8s-0.5.0
    ;;

  *)
    echo "Unknown Flavor: $FLAVOR" 1>&2
    echo
    exit 1

esac

echo SPARK_VERSION: $SPARK_VERSION
echo HADOOP_VERSION: $HADOOP_VERSION
echo DLABRANCH: $DLABRANCH
echo

# Install netlib-java on Ubuntu
# sudo apt-get install libatlas3-base libopenblas-base
# sudo update-alternatives --config libblas.so
# sudo update-alternatives --config libblas.so.3
# sudo update-alternatives --config liblapack.so
# sudo update-alternatives --config liblapack.so.3

cd $DLAHOME/repos/spark

git checkout $DLABRANCH
echo

function clean() {
  cd $DLAHOME/repos/spark
  rm spark*.tgz
  rm -fr dist
  mvn clean -DskipTests=true
}

function tar_src() {
  cd $DLAREPOS
  tar --exclude='./spark/.git' --exclude='./spark/dist' -cvfz $DLAHOME/dist/spark/spark-$SPARK_VERSION-src.tgz spark
}

function mvn_install() {
  cd $DLAHOME/repos/spark
  mvn install \
    -Pkubernetes \
    -Pbigtop-dist \
    -Pnetlib-lgpl \
    -Phadoop-2.7 \
    -Dhadoop.version=$HADOOP_VERSION \
    -Pyarn \
    -Dyarn.version=$HADOOP_VERSION \
    -Psparkr \
    -Phive \
    -Phive-thriftserver \
    -Dmaven.javadoc.skip=true \
    -Dcheckstyle.skip=true \
    -Dscalastyle.skip=true \
    -Drat.skip=true \
    -Dcobertura.skip=true \
    -DskipTests \
    "$@"
}

function build() {
  cd $DLAHOME/repos/spark
  ./dev/make-distribution.sh \
    --tgz \
    --name hadoop-$HADOOP_VERSION \
    -Pkubernetes \
    -Pbigtop-dist \
    -Pnetlib-lgpl \
    -Phadoop-2.7 \
    -Dhadoop.version=$HADOOP_VERSION \
    -Psparkr \
    -Pyarn \
    -Dyarn.version=$HADOOP_VERSION \
    -Phive \
    -Phive-thriftserver \
    -Dmaven.javadoc.skip=true \
    -Dcheckstyle.skip=true \
    -Dscalastyle.skip=true \
    -Drat.skip=true \
    -Dcobertura.skip=true \
    -DskipTests \
    "$@"
}

function deploy_dist() {

  rm -fr $DLAOPT/spark* || true
  rm $DLAHOME/dist/spark/spark* || true

  cd $DLAOPT
  cp $DLAHOME/repos/spark/spark-$SPARK_VERSION-bin-hadoop-$HADOOP_VERSION.tgz $DLAOPT
  tar xfz spark-$SPARK_VERSION-bin-hadoop-$HADOOP_VERSION.tgz

  mv $DLAHOME/repos/spark/spark-$SPARK_VERSION-bin-hadoop-$HADOOP_VERSION.tgz $DLAHOME/dist/spark/

  ln -s $DLAOPT/spark-$SPARK_VERSION-bin-hadoop-$HADOOP_VERSION $DLAOPT/spark-$SPARK_VERSION
  tar cfzh $DLAHOME/dist/spark/spark-$SPARK_VERSION.tgz spark-$SPARK_VERSION

  ln -s $DLAOPT/spark-$SPARK_VERSION-bin-hadoop-$HADOOP_VERSION $DLAOPT/spark
  tar cfzh $DLAHOME/dist/spark/spark.tgz spark

  cd $DLAOPT/spark/bin

}

clean
# tar_src
mvn_install
build
deploy_dist
